pipeline {
    agent any

    environment {
        // Kubernetes namespace
        K8S_NAMESPACE = "default"
        // Minikube IP (you can get it via `minikube ip` and hardcode or pass as parameter)
        MINIKUBE_IP = "192.168.49.2"
    }

    stages {
        stage('Deploy to Minikube') {
            steps {
                withCredentials([
                    file(credentialsId: 'kubeconfig-credentials-id', variable: 'KUBECONFIG_FILE'),
                    file(credentialsId: 'minikube-ca', variable: 'MINIKUBE_CA'),
                    file(credentialsId: 'minikube-cert', variable: 'MINIKUBE_CERT'),
                    file(credentialsId: 'minikube-key', variable: 'MINIKUBE_KEY')
                ]) {
                    script {
                        def MINIKUBE_PATH = "${env.WORKSPACE}/minikube"

                        sh """
                            mkdir -p "${MINIKUBE_PATH}"
                            cp "$KUBECONFIG_FILE" "${MINIKUBE_PATH}/kubeconfig"
                            cp "$MINIKUBE_CA" "${MINIKUBE_PATH}/ca.crt"
                            cp "$MINIKUBE_CERT" "${MINIKUBE_PATH}/client.crt"
                            cp "$MINIKUBE_KEY" "${MINIKUBE_PATH}/client.key"

                            sed -i "s|server: .*|server: https://${MINIKUBE_IP}:8443|g" "${MINIKUBE_PATH}/kubeconfig"
                            sed -i -E 's|C:\\\\Users\\\\[^\\\\]+\\\\.minikube|${MINIKUBE_PATH}|g' "${MINIKUBE_PATH}/kubeconfig"

                            export KUBECONFIG="${MINIKUBE_PATH}/kubeconfig"

                            kubectl version --client
                            kubectl cluster-info
                            kubectl apply -f k8s/deployment.yml -n $K8S_NAMESPACE
                            kubectl apply -f k8s/service.yml -n $K8S_NAMESPACE
                            kubectl apply -f k8s/ingress.yml -n $K8S_NAMESPACE || echo "ℹ️ No ingress.yml found"
                            kubectl rollout status deployment/eureka-server -n $K8S_NAMESPACE --timeout=120s
                        """
                    }
                }
            }
        }
    }
}
